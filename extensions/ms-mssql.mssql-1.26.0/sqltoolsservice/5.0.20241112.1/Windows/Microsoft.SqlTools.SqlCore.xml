<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlTools.SqlCore</name>
    </assembly>
    <members>
        <member name="P:Microsoft.SqlTools.SqlCore.Connection.SecurityToken.Token">
            <summary>
            Gets or sets the refresh token.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.SqlTools.SqlCore.Connection.SecurityToken.ExpiresOn" -->
        <!-- Badly formed XML comment ignored for member "P:Microsoft.SqlTools.SqlCore.Connection.SecurityToken.TokenType" -->
        <member name="T:Microsoft.SqlTools.SqlCore.Metadata.MetadataType">
            <summary>
            Metadata type enumeration
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Metadata.ObjectMetadata">
            <summary>
            Object metadata information
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory">
            <summary>
            A <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory"/> supports creation of <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode"/> children
            for a class of objects in the tree. The 
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.ApplicableParents">
            <summary>
            The set of applicable parents for which the factory can create children.
            </summary>
            <returns>
            the string names for each <see cref="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeType"/> that 
            this factory can create children for
            </returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.Expand(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter})">
            <summary>
            Expands an element in the 
            </summary>
            <param name="parent">Parent Node</param>
            <param name="refresh">force to refresh</param>
            <param name="name">name of the sql object to filter</param>
            <param name="includeSystemObjects">include system objects</param>
            <param name="cancellationToken">cancellation token</param>
            <param name="filters">filters to apply</param>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.Filters">
            <summary>
            The list of filters that should be applied on the smo object list
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.SmoProperties">
            <summary>
            The list of properties to be loaded with the object
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.GetNodeSubType(System.Object,Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext)">
            <summary>
            Returns the node sub type if the object can have sub types otehr wise returns empty string
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.GetNodeStatus(System.Object,Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext)">
            <summary>
            Returns the status of the object assigned to node. If the object doesn't spport status returns empty string
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.GetNodeCustomName(System.Object,Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext)">
            <summary>
            Returns the custom name of the object assigned to the node. If the object doesn't have custom name, returns empty string
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.GetNodePathName(System.Object)">
            <summary>
            Returns the name of the object as shown in its Object Explorer node path
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.ChildFactory.PutFoldersAfterNodes">
            <summary>
            A flag that puts child folders after nodes when the node is expanded.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter">
            <summary>
            Has information for filtering a SMO object by properties 
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter.CanApplyFilter(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if the filter can be apply to the given type and Server type
            </summary>
            <param name="type">Type of the querier</param>
            <param name="validForFlag">Server Type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter.ToPropertyFilterString(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Creates a string from the filter property and values to be used in the Urn to query the SQL objects
            Example of the output:[@ IsSystemObject = 0]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter.GetPropertyFilter(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter},System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Creates a fully paramaterized property filter string for the URN query for SQL objects.
            Example of the output:[@ IsSystemObject = 0]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter.AddPropertyFilterToFilterString(System.String,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter},System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Appends a list of property filters to an URN query string
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty">
            <summary>
            The filterable properties that a node supports
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty.Name">
            <summary>
            The name of the filter property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty.DisplayName">
            <summary>
            The name of the filter property displayed to the user
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty.Description">
            <summary>
            The description of the filter property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty.Type">
            <summary>
            The data type of the filter property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterProperty.Choices">
            <summary>
            The list of choices for the filter property if the type is choice
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterPropertyDataType">
            <summary>
            The data type of the filter property. Matches NodeFilterPropertyDataType enum in ADS : https://github.com/microsoft/azuredatastudio/blob/main/src/sql/azdata.proposed.d.ts#L1847-L1853
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterPropertyChoice">
            <summary>
            The choice for the filter property if the type is choice
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterPropertyChoice.DisplayName">
            <summary>
            The dropdown display value for the choice
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeFilterPropertyChoice.Value">
            <summary>
            The value of the choice
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeObservableCollection">
            <summary>
            A collection class for <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeObservableCollection.ReSortChild(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode)">
            <summary>
            Repositions this child in the list
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeOrFilter">
            <summary>
            Has information for filtering a SMO object by properties 
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeOrFilter.FilterList">
            <summary>
            Filter values
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeOrFilter.CanApplyFilter(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if any of the filters within the FilterList apply to the type and server type.
            </summary>
            <param name="type">Type of the querier</param>
            <param name="validForFlag">Server Type</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeOrFilter.ToPropertyFilterString(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Creates a string representation of a node "or" filter, which is combined in the INodeFilter interface to construct the filter used in the URN to query the SQL objects.
            Example of the output: ((@TableTemporalType = 1) or (@LedgerTableType = 1))
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter">
            <summary>
            Has information for filtering a SMO object by properties 
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.Property">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.Values">
            <summary>
            Filter values
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.Type">
            <summary>
            Type of the filter values
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.ValidFor">
            <summary>
            Indicates which platforms a filter is valid for
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.TypeToReverse">
            <summary>
            The type of the Querier the filter can be applied to
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.IsNotFilter">
            <summary>
            Indicates if the filter is a "not" filter. Eg (not(@IsSystemObject = 0))
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.IsDateTime">
            <summary>
            Indicates if the values are for type datetime
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.FilterType">
            <summary>
            Indicates the type of the filter. It can be EQUALS, DATETIME, FALSE or CONTAINS
            More information can be found here:
            https://learn.microsoft.com/en-us/sql/powershell/query-expressions-and-uniform-resource-names?view=sql-server-ver16#examples
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.CanApplyFilter(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if the filter can be apply to the given type and Server type
            </summary>
            <param name="type">Type of the querier</param>
            <param name="validForFlag">Server Type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodePropertyFilter.ToPropertyFilterString(System.Type,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Creates a string representation of a given node filter, which is combined in the INodeFilter interface to construct the filter used in the URN to query the SQL objects.
            Example of the output: (@ IsSystemObject = 0)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeSmoProperty">
            <summary>
            Has information for SMO object properties to be loaded with the SMO object
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeSmoProperty.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeSmoProperty.ValidFor">
            <summary>
            Indicates which platforms a filter is valid for
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.NodeTypes">
            <summary>
            Enum listing possible node types in the object explorer tree
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode">
            <summary>
            Base class for elements in the object explorer tree. Provides common methods for tree navigation
            and other core functionality
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.#ctor">
            <summary>
            Constructor with no required inputs
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.#ctor(System.String)">
            <summary>
            Constructor that accepts a label to identify the node
            </summary>
            <param name="value">Label identifying the node</param>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.BuildingMetadataLock">
            <summary>
            Event which tells if MetadataProvider is built fully or not
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeValue">
            <summary>
            Value describing this node
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodePathName">
            <summary>
            The name of this object as included in its node path
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.ObjectMetadata">
            <summary>
            Object metadata for smo objects
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeType">
            <summary>
            The type of the node - for example Server, Database, Folder, Table
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.IsSystemObject" -->
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeTypeId">
            <summary>
            Enum defining the type of the node - for example Server, Database, Folder, Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeSubType">
            <summary>
            Node Sub type - for example a key can have type as "Key" and sub type as "PrimaryKey"
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer node failure reason, if any.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeStatus">
            <summary>
            Node status - for example login can be disabled/enabled
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.Label">
            <summary>
            Label to display to the user, describing this node.
            If not explicitly set this will fall back to the <see cref="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.NodeValue"/> but
            for many nodes such as the server, the display label will be different
            to the value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.IsAlwaysLeaf">
            <summary>
            Is this a leaf node (in which case no children can be generated) or
            is it expandable?
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.ErrorStateMessage">
            <summary>
            Message to show if this Node is in an error state. This indicates
            that children could be retrieved
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.Parent">
            <summary>
            Parent of this node
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.GetNodePath">
            <summary>
            Path identifying this node: for example a table will be at ["server", "database", "tables", "tableName"].
            This enables rapid navigation of the tree without the need for a global registry of elements.
            The path functions as a unique ID and is used to disambiguate the node when sending requests for expansion.
            A common ID is needed since processes do not share address space and need a unique identifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.Expand(System.String,System.Threading.CancellationToken,System.String,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter})">
            <summary>
            Expands this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.Expand(System.Threading.CancellationToken,System.String,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter})">
            <summary>
            Expands this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.Refresh(System.Threading.CancellationToken,System.String,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter})">
            <summary>
            Refresh this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.GetChildren">
            <summary>
            Gets a readonly view of the currently defined children for this node. 
            This does not expand the node at all
            Since the tree needs to keep track of parent relationships, directly 
            adding to the list is not supported. 
            </summary>
            <returns><see cref="T:System.Collections.Generic.IList`1"/> containing all children for this node</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.AddChild(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode)">
            <summary>
            Adds a child to the list of children under this node
            </summary>
            <param name="newChild"><see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode"/></param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.GetContext">
            <summary>
            Optional context to help with lookup of children
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.GetContextAs``1">
            <summary>
            Helper method to convert context to expected format
            </summary>
            <typeparam name="T">Type to convert to</typeparam>
            <returns>context as expected type of null if it doesn't match</returns>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode.SortPriority">
            <summary>
            Sort Priority to help when ordering elements in the tree
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerOptions.GroupBySchemaFlagGetter">
            <summary>
            Function that returns flag to group nodes by schema. Default is false
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerOptions.OperationTimeoutSeconds">
            <summary>
            Timeout for OE session operations in seconds. Default is 60 seconds
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.ServerName">
            <summary>
            Server name for the OE session
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.DatabaseName">
            <summary>
            Database name for the OE session
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.UserName">
            <summary>
            User name for the OE session
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.ServerVersion">
            <summary>
            SQL Server version for the OE session
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.EngineEditionId">
            <summary>
            SQL Server edition for the OE session
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.IsCloud">
            <summary>
            Checks if the OE session is for Azure SQL DB
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo.isDefaultOrSystemDatabase">
            <summary>
            Indicates if the OE session is for default or system database
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerUtils">
            <summary>
            Utility class for Object Explorer related operations
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerUtils.VisitChildAndParents(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,System.Predicate{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode})">
            <summary>
            Visitor that walks all nodes from the child to the root node, unless the 
            <paramref name="visitor"/> function indicates that this should stop traversing
            </summary>
            <param name="child">node to start traversing at</param>
            <param name="visitor">Predicate function that accesses the tree and
            determines whether to stop going further up the tree</param>
            <returns>
            boolean - true to continue navigating up the tree, false to end the loop
            and return early
            </returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerUtils.FindNode(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,System.Predicate{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode},System.Predicate{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Finds a node by traversing the tree starting from the given node through all the children
            </summary>
            <param name="node">node to start traversing at</param>
            <param name="condition">Predicate function that accesses the tree and
            determines whether to stop going further up the tree</param>
            <param name="filter">Predicate function to filter the children when traversing</param>
            <returns>A Tree Node that matches the condition, or null if no matching node could be found</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.DatabaseTreeNode.EnsureContextInitialized">
            <summary>
            Initializes the context and sets its ValidFor property
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.FolderNode">
            <summary>
            Represents a folder node in the tree
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.FolderNode.GetContext">
            <summary>
            For folders, this copies the context of its parent if available
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.FolderNode.GetParentSmoObject">
            <summary>
            For folders, searches for its parent's SMO object rather than copying for itself
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Management.Smo.NamedSmoObject"/> from this parent's parent, or null if not found</returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ServerNode">
            <summary>
            Server node implementation 
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ServerNode.GetConnectionLabel">
            <summary>
            Returns the label to display to the user.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoChildFactoryBase.OnExpandPopulateFolders(System.Collections.Generic.IList{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode},Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode)">
            <summary>
            Populates any folders for a given parent node 
            </summary>
            <param name="allChildren">List to which nodes should be added</param>
            <param name="parent">Parent the nodes are being added to</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoChildFactoryBase.OnExpandPopulateNonFolders(System.Collections.Generic.IList{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode},Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,System.Boolean,System.String,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter})">
            <summary>
            Populates any non-folder nodes such as specific items in the tree.
            </summary>
            <param name="allChildren">List to which nodes should be added</param>
            <param name="parent">Parent the nodes are being added to</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoChildFactoryBase.RemoveFoldersFromInvalidSqlServerVersions(System.Collections.Generic.IList{Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode},Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode)">
            <summary>
            Filters out invalid folders if they cannot be displayed for the current server version
            </summary>
            <param name="allChildren">List to which nodes should be added</param>
            <param name="parent">Parent the nodes are being added to</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoChildFactoryBase.PassesFinalFilters(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,System.Object)">
            <summary>
            Returns true if any final validation of the object to be added passes, and false
            if validation fails. This provides a chance to filter specific items out of a list 
            </summary>
            <param name="parent"></param>
            <param name="contextObject"></param>
            <returns>boolean</returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoCollectionWrapper`1">
            <summary>
            Wrapper to convert non-generic Smo enumerables to generic enumerable types for easier use in 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoCollectionWrapper`1.#ctor(Microsoft.SqlServer.Management.Smo.SmoCollectionBase)">
            <summary>
            Constructor which accepts a <see cref="T:Microsoft.SqlServer.Management.Smo.SmoCollectionBase"/> containing the objects
            to wrap 
            </summary>
            <param name="collection"><see cref="T:Microsoft.SqlServer.Management.Smo.SmoCollectionBase"/> or null if none were set</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoCollectionWrapper`1.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoCollectionWrapper`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ColumnsChildFactory">
            <summary>
            Custom name for Columns
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.UserDefinedTableTypeColumnsChildFactory">
            <summary>
            Custom name for UserDefinedTableTypeColumn
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.DatabasesChildFactory">
            <summary>
            Status for databases
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoExtensions.UpdateAccessToken(Microsoft.SqlServer.Management.Smo.SqlSmoObject,System.String)">
            <summary>
            Updates access token on the connection context of <paramref name="sqlObj"/> instance.
            </summary>
            <param name="sqlObj">(this) SMO SQL Object containing connection context.</param>
            <param name="accessToken">Access token</param>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.KeysChildFactory">
            <summary>
            Subtye for keys
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.IndexesChildFactory">
            <summary>
            Sub types and custom name for indexes
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.UserDefinedTableTypeKeysChildFactory">
            <summary>
            sub type for UserDefinedTableTypeKeys
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ServerLevelLoginsChildFactory">
            <summary>
            Status for logins
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.TableValuedFunctionParametersChildFactory">
            <summary>
            Custom name for parameters
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ScalarValuedFunctionParametersChildFactory">
            <summary>
            Custom name for parameters
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.AggregateFunctionParametersChildFactory">
            <summary>
            Custom name for parameters
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.StoredProcedureParametersChildFactory">
            <summary>
            Custom name for parameters
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier">
            <summary>
            A <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier"/> handles SMO queries for one or more SMO object types.
            The <see cref="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.SupportedObjectTypes"/> property defines which types can be queried.
            
            To query multiple 
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.Query(Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Queries SMO for a collection of objects using the <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext"/> 
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.GetDataReader(System.Object)">
            <summary>
            Convert the data to data reader is possible
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.PassesFinalFilters(Microsoft.SqlServer.Management.Smo.SqlSmoObject,Microsoft.SqlServer.Management.Smo.SqlSmoObject)">
            <summary>
            Mthod used to do custom filtering on smo objects if cannot be implemented using the filters
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.IsValidFor(Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if the querier is valid for the given server version
            </summary>
            <param name="serverValidFor"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier.ValidFor">
            <summary>
            Indicates which platforms the querier is valid for
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext">
            <summary>
            Context object containing key properties needed to query for SMO objects
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.#ctor(Microsoft.SqlServer.Management.Smo.Server,Microsoft.SqlTools.Extensibility.IMultiServiceProvider,System.Func{System.Boolean},Microsoft.SqlTools.SqlCore.Connection.SecurityToken)">
            <summary>
            Creates a context object with a server to use as the basis for any queries
            </summary>
            <param name="server"></param>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.SqlServerType">
            <summary>
            The server type
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.Server">
            <summary>
            The server SMO will query against
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.Database">
            <summary>
            Optional Database context object to query against
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.Parent">
            <summary>
            Parent of a give node to use for queries
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.GroupBySchemaFlag">
            <summary>
            Function that gets the group by schema 
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.GroupBySchema">
            <summary>
            Returns group by schema flag value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.ServiceProvider">
            <summary>
            A query loader that can be used to find <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQuerier"/> objects
            for specific SMO types
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.ParentAs``1">
            <summary>
            Helper method to cast a parent to a specific type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.CopyWithParent(Microsoft.SqlServer.Management.Smo.SmoObjectBase)">
            <summary>
            Copies the context for use by another node
            </summary>
            <param name="parent">New Parent to set</param>
            <returns>new <see cref="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext"/> with all fields except <see cref="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.Parent"/> the same</returns>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.ValidFor">
            <summary>
            Indicates which platforms the server and database is valid for
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.UpdateAccessToken(System.String)">
            <summary>
            Updates access token on parent connection context.
            </summary>
            <param name="accessToken">Acquired access token</param>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoQueryContext.EnsureConnectionOpen(Microsoft.SqlServer.Management.Smo.SmoObjectBase)">
            <summary>
            Ensures the server objects connection context is open. This is used by all child objects, and
            the only way to easily access is via the server object. This should be called during access of
            any of the object properties
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SqlHistoryTableQuerier">
            <summary>
            Filters the history tables to only return ones related to the parent table
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.TablesChildFactory">
            <summary>
            Custom name for table
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.TableChildFactory">
            <summary>
            Custom name and icon for history table
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.DroppedLedgerTablesChildFactory">
            <summary>
            Custom name and icon for dropped ledger tables
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoTreeNode">
            <summary>
            A Node in the tree representing a SMO-based object
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoTreeNode.IsMsShippedOwned">
            <summary>
            Is this a system (MSShipped) object?
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoTreeNode.ValidFor">
            <summary>
            Indicates which platforms a node is valid for
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoTreeNode.NextSortPriority">
            <summary>
            Gets an incrementing sort priority value to assist in automatically sorting
            elements in a tree
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.ViewsChildFactory">
            <summary>
            Custom name for view
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.TriggersChildFactory">
            <summary>
            Status for triggers
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.DroppedLedgerViewsChildFactory">
            <summary>
            Custom name for dropped ledger views
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.UsersChildFactory">
            <summary>
            Status for logins
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoWrapper">
            <summary>
            Internal for testing purposes only. This class provides wrapper functionality
            over SMO objects in order to facilitate unit testing
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoWrapper.CreateServer(Microsoft.SqlServer.Management.Common.ServerConnection)">
            <summary>
            Creates instance of <see cref="T:Microsoft.SqlServer.Management.Smo.Server"/> from provided <paramref name="serverConn"/> instance.
            </summary>
            <param name="serverConn">Server connection instance.</param>
            <returns>Server instance.</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoWrapper.IsConnectionOpen(Microsoft.SqlServer.Management.Smo.SmoObjectBase)">
            <summary>
            Checks if connection is open on the <paramref name="smoObj"/> instance.
            </summary>
            <param name="smoObj">SMO Object containing connection context.</param>
            <returns>True if connection is open, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.SmoModel.SmoWrapper.OpenConnection(Microsoft.SqlServer.Management.Smo.SmoObjectBase)">
            <summary>
            Opens connection on the connection context of <paramref name="smoObj"/> instance.
            </summary>
            <param name="smoObj">SMO Object containing connection context.</param>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.SqlServerType">
            <summary>
            Server Types
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.ServerVersionHelper">
            <summary>
            Includes helper functions for server version and type
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ServerVersionHelper.GetValidForFlag(Microsoft.SqlTools.SqlCore.ObjectExplorer.SqlServerType,Microsoft.SqlServer.Management.Smo.Database)">
            <summary>
            Converts a server type to ValidForFlag
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ServerVersionHelper.IsValidFor(Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag,Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if the given valid for flag is not set or it includes the server version
            </summary>
            <param name="serverVersion">Server version</param>
            <param name="validFor">Valid for flag</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ServerVersionHelper.GetValidForFlag(Microsoft.SqlTools.SqlCore.ObjectExplorer.SqlServerType,System.Boolean)">
            <summary>
            Converts a server type to ValidForFlag
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.ServerVersionHelper.CalculateServerType(Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo)">
            <summary>
            Creates a server type from the server version
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.StatelessObjectExplorer">
            <summary>
            Stateless object explorer class can be used to handle object explorer requests without creating a session. It requires a connection string and a node path to query objects from the server.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.SqlTools.SqlCore.ObjectExplorer.StatelessObjectExplorer.Expand(Microsoft.SqlServer.Management.Common.ServerConnection,System.String,Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerServerInfo,Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerOptions,Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter[])" -->
        <member name="M:Microsoft.SqlTools.SqlCore.ObjectExplorer.StatelessObjectExplorer.ExpandTreeNode(Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.TreeNode,Microsoft.SqlTools.SqlCore.ObjectExplorer.ObjectExplorerOptions,Microsoft.SqlTools.SqlCore.ObjectExplorer.Nodes.INodeFilter[])">
            <summary>
            Expands the given node and returns the child nodes.
            </summary>
            <param name="node"> Node to expand </param>
            <param name="options"> Object explorer expansion options </param>
            <param name="filters"> Filters to be applied on the leaf nodes </param>
            <param name="securityToken"> Security token to connect to the server. To be used in case of AAD based connections </param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.ObjectExplorer.ValidForFlag">
            <summary>
            Indicates which type of server a given node type is valid for
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Performance.QueryStoreQueryGenerator.PrependSqlParameters(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Prepends declarations and definitions of <paramref name="sqlParams"/> to <paramref name="query"/>
            </summary>
            <param name="query"></param>
            <param name="sqlParams"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Performance.QueryStoreQueryGenerator.GetTSqlRepresentation(System.Object)">
            <summary>
            Converts an object (that would otherwise be set as a SqlParameter value) to an entirely TSQL representation.
            Only s the same subset of object types that Query Store query generators use:
            int, long, string, and DateTimeOffset
            </summary>
            <param name="paramValue"></param>
            <returns>data type and value portions of a parameter declaration, in the form "INT = 999"</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.AsyncScriptAsScriptingOperation.GetScriptAsScript(Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams,Microsoft.SqlServer.Management.Common.ServerConnection)">
            <summary>
            Gets the script as script like select, insert, update, drop and create for the given scripting parameters.
            </summary>
            <param name="parameters">scripting parameters that contains the object to script and the scripting options</param>
            <param name="serverConnection">server connection to use for scripting</param>
            <returns>script as script</returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams">
            <summary>
            Parameters sent to when a scripting operation has completed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams.ErrorDetails">
            <summary>
            Get or sets the error details for an error that occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams.ErrorMessage">
            <summary>
            Get or sets the error message for an error that occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams.HasError">
            <summary>
            Get or sets a value to indicate an error occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams.Canceled">
            <summary>
            Get or sets a value to indicate the scripting operation was canceled.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingCompleteParams.Success">
            <summary>
            Get or sets a value to indicate the scripting operation successfully completed.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingEventParams">
            <summary>
            Base class for all scripting event parameters.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingEventParams.OperationId">
            <summary>
            Gets or sets the operation id of the scripting operation this event is associated with.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingEventParams.SequenceNumber">
            <summary>
            Gets or sets the sequence number.  The sequence number starts at 1, and is incremented each time a scripting event is 
            raised for the current scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject">
            <summary>
            Class to represent a database object that can be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject.Type">
            <summary>
            Gets or sets the database object type.  
            </summary>
            <remarks>
            This underlying values are determined by the SqlScriptPublishModel.GetDatabaseObjectTypes() and
            can change depending on the version of SMO used by the tools service.  Values can be: 
                Table,
                View,
                StoredProcedure,
                UserDefinedFunction,
                UserDefinedDataType,
                User,
                Default,
                Rule,
                DatabaseRole,
                ApplicationRole,
                SqlAssembly,
                DdlTrigger,
                Synonym,
                XmlSchemaCollection,
                Schema,
                PlanGuide,
                UserDefinedType,
                UserDefinedAggregate,
                FullTextCatalog,
                UserDefinedTableType
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject.Schema">
            <summary>
            Gets or sets the schema of the database object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject.Name">
            <summary>
            Gets or sets the database object name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject.ParentName">
            <summary>
            Gets or sets the parent object name
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject.ParentTypeName">
            <summary>
            Gets or sets the parent object type name, such as Table, View, etc.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingOperationType">
            <summary>
            Scripting Operation type
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams">
            <summary>
            Parameters for a script request.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.FilePath">
            <summary>
            Gets or sets the file path used when writing out the script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ScriptDestination">
            <summary>
            Gets or sets whether scripting to a single file or file per object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ConnectionString">
            <summary>
            Gets or sets connection string of the target database the scripting operation will run against.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ScriptingObjects">
            <summary>
            Gets or sets a list of scripting objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.IncludeObjectCriteria">
            <summary>
            Gets or sets a list of scripting object which specify the include criteria of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ExcludeObjectCriteria">
            <summary>
            Gets or sets a list of scripting object which specify the exclude criteria of objects to not script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.IncludeSchemas">
            <summary>
            Gets or sets a list of schema name of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ExcludeSchemas">
            <summary>
            Gets or sets a list of schema name of objects to not script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.IncludeTypes">
            <summary>
            Gets or sets a list of type name of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ExcludeTypes">
            <summary>
            Gets or sets a list of type name of objects to not script
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.ScriptOptions">
            <summary>
            Gets or sets the scripting options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.OwnerUri">
            <summary>
            Gets or sets the connection owner URI
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingParams.Operation">
            <summary>
            The script operation
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingPlanNotificationParams">
            <summary>
            Parameters to indicate the script operation has resolved the objects to be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingPlanNotificationParams.ScriptingObjects">
            <summary>
            Gets or sets the list of database objects whose progress has changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingPlanNotificationParams.Count">
            <summary>
            Gets or sets the count of database objects whose progress has changed.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams">
            <summary>
            Parameters sent when a scripting operation has made progress.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.ScriptingObject">
            <summary>
            Gets or sets the scripting object whose progress has changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.Status">
            <summary>
            Gets or sets the status of the scripting operation for the scripting object.
            </summary>
            <remarks>
            Values can be: 'Completed', 'Progress', and 'Error'.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.CompletedCount">
            <summary>
            Gets or count of completed scripting operations.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.TotalCount">
            <summary>
            Gets this total count of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.ErrorDetails">
            <summary>
            Gets or sets the error details if an error occurred scripting a database object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingProgressNotificationParams.ErrorMessage">
            <summary>
            Get or sets the error message for an error that occurred scripting a database object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions">
            <summary>
            A wrpaper of ScriptOptions to map the option name with the oen in SMO.ScriptingOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptAnsiPadding">
            <summary>
            Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.AppendToFile">
            <summary>
            Append the generated script to a file
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ContinueScriptingOnError">
            <summary>
            Continue to script if an error occurs. Otherwise, stop.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ConvertUDDTToBaseType">
            <summary>
            Convert user-defined data types to base types.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.GenerateScriptForDependentObjects">
            <summary>
            Generate script for dependent objects for each object scripted.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.IncludeDescriptiveHeaders">
            <summary>
            Include descriptive headers for each object generated.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.IncludeIfNotExists">
            <summary>
            Check that an object with the given name exists before dropping or altering or that an object with the given name does not exist before creating.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.IncludeVarDecimal">
            <summary>
            Script options to set vardecimal storage format.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptDriIncludeSystemNames">
            <summary>
            Include system generated constraint names to enforce declarative referential integrity.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.IncludeUnsupportedStatements">
            <summary>
            Include statements in the script that are not supported on the specified SQL Server database engine type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.SchemaQualify">
            <summary>
            Prefix object names with the object schema.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Bindings">
            <summary>
            Script options to set bindings option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Collation">
            <summary>
            Script the objects that use collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Default">
            <summary>
            Script the default values.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptCreateDrop">
            <summary>
            Script Object CREATE/DROP statements.  
            Possible values: 
              ScriptCreate
              ScriptDrop
              ScriptCreateDrop
              ScriptSelect
            </summary>
            <remarks>
            The default is ScriptCreate.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptExtendedProperties">
            <summary>
            Script the Extended Properties for each object scripted.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptCompatibilityOption">
            <summary>
            Script only features compatible with the specified version of SQL Server.  Possible values:
              Script90Compat
              Script100Compat
              Script105Compat
              Script110Compat
              Script120Compat
              Script130Compat
              Script140Compat
              Script150Compat
              Script160Compat
            </summary>
            <remarks>
            The default is Script140Compat.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.TargetDatabaseEngineType">
            <summary>
            Script only features compatible with the specified SQL Server database engine type.
            Possible Values:
              SingleInstance
              SqlAzure
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.TargetDatabaseEngineEdition">
            <summary>
            Script only features compatible with the specified SQL Server database engine edition.
            Possible Values:
              SqlServerPersonalEdition
              SqlServerStandardEdition 
              SqlServerEnterpriseEdition 
              SqlServerExpressEdition
              SqlAzureDatabaseEdition
              SqlDatawarehouseEdition
              SqlServerStretchEdition 
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptLogins">
            <summary>
            Script all logins available on the server. Passwords will not be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptObjectLevelPermissions">
            <summary>
            Generate object-level permissions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptOwner">
            <summary>
            Script owner for the objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptStatistics">
            <summary>
            Script statistics, and optionally include histograms, for each selected table or view.
            Possible values:
              ScriptStatsNone
              ScriptStatsDDL
              ScriptStatsAll
            </summary>
            <remarks>
            The default value is ScriptStatsNone.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptUseDatabase">
            <summary>
            Generate USE DATABASE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.TypeOfDataToScript">
            <summary>
            Generate script that contains schema only or schema and data.
            Possible Values:
              SchemaAndData
              DataOnly
              SchemaOnly
            </summary>
            <remarks>
            The default value is SchemaOnly.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptChangeTracking">
            <summary>
            Scripts the change tracking information.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptCheckConstraints">
            <summary>
            Script the check constraints for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptDataCompressionOptions">
            <summary>
            Scripts the data compression information.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptForeignKeys">
            <summary>
            Script the foreign keys for each table scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptFullTextIndexes">
            <summary>
            Script the full-text indexes for each table or indexed view scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptIndexes">
            <summary>
            Script the indexes (including XML and clustered indexes) for each table or indexed view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptPrimaryKeys">
            <summary>
            Script the primary keys for each table or view scripted
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptTriggers">
            <summary>
            Script the triggers for each table or view scripted
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.UniqueKeys">
            <summary>
            Script the unique keys for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.AnsiPadding">
            <summary>
            Returns Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ConvertUserDefinedDataTypesToBaseType">
            <summary>
            Returns ConvertUDDTToBaseType
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.IncludeHeaders">
            <summary>
            Returns IncludeDescriptiveHeaders
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriIncludeSystemNames">
            <summary>
            Returns ScriptDriIncludeSystemNames
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.SchemaQualifyForeignKeysReferences">
            <summary>
            Returns SchemaQualify
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.NoCollation">
            <summary>
            Returns false if Collation is true
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriDefaults">
            <summary>
            Returns the value of Default Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ExtendedProperties">
            <summary>
            Returns the value of ScriptExtendedProperties Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Permissions">
            <summary>
            Returns the value of ScriptObjectLevelPermissions Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Statistics">
            <summary>
            Returns the value of ScriptStatistics Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ChangeTracking">
            <summary>
            Returns the value of ScriptChangeTracking Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriChecks">
            <summary>
            Returns the value of ScriptCheckConstraints Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.ScriptDataCompression">
            <summary>
            Returns the value of ScriptDataCompressionOptions Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriForeignKeys">
            <summary>
            Returns the value of ScriptForeignKeys Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.FullTextIndexes">
            <summary>
            Returns the value of ScriptFullTextIndexes Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Indexes">
            <summary>
            Returns the value of ScriptIndexes Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriPrimaryKey">
            <summary>
            Returns the value of ScriptPrimaryKeys Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.Triggers">
            <summary>
            Returns the value of ScriptTriggers Property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsOptions.DriUniqueKeys">
            <summary>
            Returns the value of UniqueKeys Property
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation">
            <summary>
            Class to generate script as for one smo object
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.LeftDelimiter">
            <summary>
            Left delimiter for an named object
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.RightDelimiter">
            <summary>
            right delimiter for a named object
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.GenerateSchemaQualifiedName(System.String,System.String,System.Boolean)">
            <summary>
            Generate a schema qualified name (e.g. [schema].[objectName]) for an object if the option for SchemaQualify is true
            </summary>
            <param name="schema">The schema name. May be null or empty in which case it will be ignored</param>
            <param name="objectName">The object name.</param>
            <param name="schemaQualify">Whether to schema qualify the object or not</param>
            <returns>The object name, quoted as appropriate and schema-qualified if the option is set</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.GetDelimitedString(System.String)">
            <summary>
            getting delimited string
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.GetDatatype(Microsoft.SqlServer.Management.Smo.DataType,Microsoft.SqlServer.Management.Smo.ScriptingOptions)">
            <summary>
            turn a smo datatype object into a type that can be inserted into tsql, e.g. nvarchar(20)
            </summary>
            <param name="type"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptAsScriptingOperation.QuoteObjectName(System.String)">
            <summary>
            Double quotes certain characters in object name
            </summary>
            <param name="sqlObject"></param>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptingExtensionMethods">
            <summary>
            Extension methods used by the scripting service.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingExtensionMethods.GetStatus(Microsoft.SqlServer.Management.SqlScriptPublish.ScriptEventArgs)">
            <summary>
            Gets the status of a scripting operation for the passed scripting event.
            </summary>
            <param name="e">The scripting event.</param>
            <returns>The status.</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingExtensionMethods.GetDatabaseObjects(Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptPublishModel)">
            <summary>
            Returns a list of ScriptingObject instances for the passed SqlScriptPublishModel instance.
            </summary>
            <param name="publishModel">The sql script publish model instance.</param>
            <returns>The list of scripting objects.</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingExtensionMethods.ToUrn(Microsoft.SqlTools.SqlCore.Scripting.Contracts.ScriptingObject,System.String,System.String)">
            <summary>
            Creates a SMO Urn instance based on the passed ScriptingObject instance.
            </summary>
            <param name="scriptingObject">The scripting object instance.</param>
            <param name="database">The name of the database referenced by the Urn.</param>
            <returns>The Urn instance.</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingExtensionMethods.ToScriptingObject(Microsoft.SqlServer.Management.Sdk.Sfc.Urn)">
            <summary>
            Creates a ScriptingObject instance based on the passed SMO Urn instance.
            </summary>
            <param name="urn">The urn instance.</param>
            <returns>The scripting object instance.</returns>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper">
            <summary>
            Helper class for scripting
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper.ScriptingGlobals.LeftDelimiter">
            <summary>
            Left delimiter for an named object
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper.ScriptingGlobals.RightDelimiter">
            <summary>
            right delimiter for a named object
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper.QuoteObjectName(System.String)">
            <summary>
            Quote the name of a given sql object.
            </summary>
            <param name="sqlObject">object</param>
            <returns>quoted object name</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper.QuoteObjectName(System.String,System.Char)">
            <summary>
            Quotes the name of a given sql object
            </summary>
            <param name="sqlObject">object</param>
            <param name="quote">quote to use</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingHelper.IsXTPSupportedOnServer(Microsoft.SqlServer.Management.Smo.Server)" -->
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptingOperation">
            <summary>
            Base class for scripting operations.  Because scripting operations can be very long
            running, there my be multiple concurrent scripting operations.  To distinguish events
            between concurrent scripting operations, use the operation id.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptingOperation.OperationId">
            <summary>
            Gets the unique id associated with this instance.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingOperation.Execute">
            <summary>
            Excecutes the scripting operation.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingOperation.Cancel">
            <summary>
            Cancels the scripting operation.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.ScriptingOperation.Dispose">
            <summary>
            Disposes the scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions">
            <summary>
            Defines the scripting options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptAnsiPadding">
            <summary>
            Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.AppendToFile">
            <summary>
            Append the generated script to a file
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ContinueScriptingOnError">
            <summary>
            Continue to script if an error occurs. Otherwise, stop.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ConvertUDDTToBaseType">
            <summary>
            Convert user-defined data types to base types.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.GenerateScriptForDependentObjects">
            <summary>
            Generate script for dependent objects for each object scripted.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.IncludeDescriptiveHeaders">
            <summary>
            Include descriptive headers for each object generated.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.IncludeIfNotExists">
            <summary>
            Check that an object with the given name exists before dropping or altering or that an object with the given name does not exist before creating.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.IncludeVarDecimal">
            <summary>
            Script options to set vardecimal storage format.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptDriIncludeSystemNames">
            <summary>
            Include system generated constraint names to enforce declarative referential integrity.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.IncludeUnsupportedStatements">
            <summary>
            Include statements in the script that are not supported on the specified SQL Server database engine type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.SchemaQualify">
            <summary>
            Prefix object names with the object schema.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.Bindings">
            <summary>
            Script options to set bindings option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.Collation">
            <summary>
            Script the objects that use collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.Default">
            <summary>
            Script the default values.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptCreateDrop">
            <summary>
            Script Object CREATE/DROP statements.  
            Possible values: 
              ScriptCreate
              ScriptDrop
              ScriptCreateDrop
            </summary>
            <remarks>
            The default is ScriptCreate.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptExtendedProperties">
            <summary>
            Script the Extended Properties for each object scripted.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptCompatibilityOption">
            <summary>
            Script only features compatible with the specified version of SQL Server.  Possible values:
              Script90Compat
              Script100Compat
              Script105Compat
              Script110Compat
              Script120Compat
              Script130Compat
              Script140Compat
              Script150Compat
              Script160Compat
            </summary>
            <remarks>
            The default is Script140Compat.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.TargetDatabaseEngineType">
            <summary>
            Script only features compatible with the specified SQL Server database engine type.
            Possible Values:
              SingleInstance
              SqlAzure
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.TargetDatabaseEngineEdition">
            <summary>
            Script only features compatible with the specified SQL Server database engine edition.
            Possible Values:
              SqlServerPersonalEdition
              SqlServerStandardEdition 
              SqlServerEnterpriseEdition 
              SqlServerExpressEdition
              SqlAzureDatabaseEdition
              SqlDatawarehouseEdition
              SqlServerStretchEdition 
              SqlManagedInstanceEdition
              SqlServerOnDemandEdition
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptLogins">
            <summary>
            Script all logins available on the server. Passwords will not be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptObjectLevelPermissions">
            <summary>
            Generate object-level permissions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptOwner">
            <summary>
            Script owner for the objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptStatistics">
            <summary>
            Script statistics, and optionally include histograms, for each selected table or view.
            Possible values:
              ScriptStatsNone
              ScriptStatsDDL
              ScriptStatsAll
            </summary>
            <remarks>
            The default value is ScriptStatsNone.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptUseDatabase">
            <summary>
            Generate USE DATABASE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.TypeOfDataToScript">
            <summary>
            Generate script that contains schema only or schema and data.
            Possible Values:
              SchemaAndData
              DataOnly
              SchemaOnly
            </summary>
            <remarks>
            The default value is SchemaOnly.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptChangeTracking">
            <summary>
            Scripts the change tracking information.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptCheckConstraints">
            <summary>
            Script the check constraints for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptDataCompressionOptions">
            <summary>
            Scripts the data compression information.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptForeignKeys">
            <summary>
            Script the foreign keys for each table scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptFullTextIndexes">
            <summary>
            Script the full-text indexes for each table or indexed view scripted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptIndexes">
            <summary>
            Script the indexes (including XML and clustered indexes) for each table or indexed view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptPrimaryKeys">
            <summary>
            Script the primary keys for each table or view scripted
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.ScriptTriggers">
            <summary>
            Script the triggers for each table or view scripted
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.Scripting.ScriptOptions.UniqueKeys">
            <summary>
            Script the unique keys for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Scripting.SmoScriptingOperation">
            <summary>
            Base class for all SMO scripting operations
            </summary>
        </member>
        <member name="E:Microsoft.SqlTools.SqlCore.Scripting.SmoScriptingOperation.CompleteNotification">
            <remarks>
            An event can be completed by the following conditions: success, cancel, error.
            </remarks>
        </member>
        <member name="E:Microsoft.SqlTools.SqlCore.Scripting.SmoScriptingOperation.ProgressNotification">
            <summary>
            Event raised when a scripting operation has made forward progress.
            </summary>
        </member>
        <member name="E:Microsoft.SqlTools.SqlCore.Scripting.SmoScriptingOperation.PlanNotification">
            <summary>
            Event raised when a scripting operation has resolved which database objects will be scripted.
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Scripting.SmoScriptingOperation.Dispose">
            <summary>
            Disposes the scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.DatabaseNode">
            <summary>
            Database Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.SchemaNode">
            <summary>
            Schema Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.TableNode">
            <summary>
            Table Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.ColumnNode">
            <summary>
            Column Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.IndexNode">
            <summary>
            Index Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.ViewNode">
            <summary>
            View Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.StoredProcedureNode">
            <summary>
            StoredProcedure Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.ParamNode">
            <summary>
            Param Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.ScalarFunctionNode">
            <summary>
            ScalarFunction Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.TableValuedFunctionNode">
            <summary>
            TableValuedFunction Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.SimpleObjectExplorer.ShortcutNode">
            <summary>
            Shortcut Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.CheckBoxProperties">
            <summary>
            Checkbox properties
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ComponentPropertiesBase">
            <summary>
            Base class for component properties
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DropdownProperties">
            <summary>
            Dropdown properties
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.InputBoxProperties">
            <summary>
            Inputbox properties
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1">
            <summary>
            Table component properties
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.Columns">
            <summary>
            The column names to be displayed
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.ObjectTypeDisplayName">
            <summary>
            The object type display name of the objects in this table
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.ItemProperties">
            <summary>
            All properties of the object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.Data">
            <summary>
            The object list.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.CanAddRows">
            <summary>
            Whether new rows can be added.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.CanRemoveRows">
            <summary>
            Whether rows can be deleted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.CanMoveRows">
            <summary>
            Whether rows can be moved.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.CanInsertRows">
            <summary>
            Whether rows can be inserted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.ShowRemoveRowConfirmation">
            <summary>
            Whether a confirmation should be shown when a row is about to be removed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.RemoveRowConfirmationMessage">
            <summary>
            The confirmation message to be displayed when a row is about to be removed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableComponentProperties`1.LabelForAddNewButton">
            <summary>
            The label for the add new button for this table.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo">
            <summary>
            Represents a component/property in the table designer
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.PropertyName">
            <summary>
            The name of the property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.Description">
            <summary>
            The description of the property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.ComponentType">
            <summary>
            The component type of the property
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.Group">
            <summary>
            The name of the group the property will be placed in whe displayed in
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.ShowInPropertiesView">
            <summary>
            The name of the group the property will be placed in whe displayed in
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyInfo.ComponentProperties">
            <summary>
            The properties of component
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyWithTabInfo">
            <summary>
            Represents a component/property with tab info in the table designer
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerDataPropertyWithTabInfo.Tab">
            <summary>
            The tab of the property
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DisposeTableDesignerRequest">
            <summary>
            The request to dispose the table designer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DisposeTableDesignerRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult">
            <summary>
            The service request to generate preview report describing the changes.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.Report">
            <summary>
            The report generated for publish preview
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.MimeType">
            <summary>
            format (mimetype) of the string
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.RequireConfirmation">
            <summary>
            Whether user confirmation is required.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.ConfirmationText">
            <summary>
            The confirmation text.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.Metadata">
            <summary>
            Metadata about the table
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportResult.SchemaValidationError">
            <summary>
            The table schema validation error
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportRequest">
            <summary>
            The service request to generate preview report describing the changes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GeneratePreviewReportRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GenerateScriptRequest">
            <summary>
            The service request to generate script for the changes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.GenerateScriptRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.InitializeTableDesignerRequest">
            <summary>
            The service request to initialize a table designer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.InitializeTableDesignerRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ProcessTableDesignerEditRequest">
            <summary>
            The service request to process the changes made in the table designer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ProcessTableDesignerEditRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.PublishTableChangesRequest">
            <summary>
            The service request to publish the changes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.PublishTableChangesRequest.Type">
            <summary>
            Request definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerChangeInfo">
            <summary>
            The information about a change made inside the table designer.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerInfo">
            <summary>
            The information requested by the table designer UI.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerIssue">
            <summary>
            Table Designer Issue
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerIssue.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerIssue.PropertyPath">
            <summary>
            The property path associated with the message
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerIssue.Severity">
            <summary>
            The severity of the message. Default value is Error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerIssue.MoreInfoLink">
            <summary>
            Any link to docs associated with error for more information
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableDesignerView">
            <summary>
            Table designer's view definition, there are predefined common properties.
            Specify the additional properties in this class.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableInfo">
            <summary>
            The information of the table being designed.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.CheckConstraintViewModel">
            <summary>
            The view model of check constraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ColumnStoreIndexViewModel">
            <summary>
            The view model of columnstore index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.EdgeConstraintViewModel">
            <summary>
            The view model of edge constraint.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ForeignKeyViewModel">
            <summary>
            The view model of foreign key.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.IndexViewModel">
            <summary>
            The view model of index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.ObjectViewModelBase">
            <summary>
            The base class for view model object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableColumnViewModel">
            <summary>
            The view model of a table column object
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.TableViewModel">
            <summary>
            The view model for a table object
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.SqlTools.SqlCore.TableDesigner.DesignerPathUtils.Validate(System.Object[],Microsoft.SqlTools.SqlCore.TableDesigner.Contracts.DesignerEditType)" -->
        <member name="M:Microsoft.SqlTools.SqlCore.TableDesigner.TableDesignerValidator.Validate(Microsoft.Data.Tools.Sql.DesignServices.TableDesigner.TableDesigner)">
            <summary>
            Validate the table and return the validation errors.
            </summary>
        </member>
        <member name="T:Microsoft.SqlTools.SqlCore.Utility.CommonConstants">
            <summary>
            Common Constant values used across multiple services
            </summary>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.DatabaseUtils.IsSystemDatabaseConnection(System.String)">
            <summary>
            Check if the database is a system database
            </summary>
            <param name="databaseName">the name of database</param>
            <returns>return true if the database is a system database</returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.EscapeString(System.String,System.Char)">
            <summary>
            Function doubles up specified character in a string
            </summary>
            <param name="s"></param>
            <param name="cEsc"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.EscapeStringCBracket(System.String)">
            <summary>
            Function doubles up ']' character in a string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.EscapeStringSQuote(System.String)">
            <summary>
            Function doubles up '\'' character in a string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.UnEscapeString(System.String,System.Char)">
            <summary>
            Function removes doubled up specified character from a string
            </summary>
            <param name="s"></param>
            <param name="cEsc"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.UnEscapeStringCBracket(System.String)">
            <summary>
            Function removes doubled up ']' character from a string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlTools.SqlCore.Utility.StringUtils.UnEscapeStringSQuote(System.String)">
            <summary>
            Function removes doubled up '\'' character from a string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
    </members>
</doc>
